/*
 * "Holographic" theme, designed for in-game use with OpenGL
 * -- Micah Dowty
 */

prop fGlowPanel, fPanelVertices, fWetPanel, fEmptyPanel;
prop upperBevel, lowerBevel, alpha, causticsAlpha, panelMargin, borderColor;

prop caustic00,caustic01,caustic02,caustic03,caustic04,caustic05,caustic06,caustic07;
prop caustic08,caustic09,caustic10,caustic11,caustic12,caustic13,caustic14,caustic15;
prop caustic16,caustic17,caustic18,caustic19,caustic20,caustic21,caustic22,caustic23;
prop caustic24,caustic25,caustic26,caustic27,caustic28,caustic29,caustic30,caustic31;


object default {
  name = "Holographic";

  bgfill = fillstyle {
    Nop();
  };

  caustic00 = LoadBitmap("caust00.bw.jpeg");
  caustic01 = LoadBitmap("caust01.bw.jpeg");
  caustic02 = LoadBitmap("caust02.bw.jpeg");
  caustic03 = LoadBitmap("caust03.bw.jpeg");
  caustic04 = LoadBitmap("caust04.bw.jpeg");
  caustic05 = LoadBitmap("caust05.bw.jpeg");
  caustic06 = LoadBitmap("caust06.bw.jpeg");
  caustic07 = LoadBitmap("caust07.bw.jpeg");
  caustic08 = LoadBitmap("caust08.bw.jpeg");
  caustic09 = LoadBitmap("caust09.bw.jpeg");
  caustic10 = LoadBitmap("caust10.bw.jpeg");
  caustic11 = LoadBitmap("caust11.bw.jpeg");
  caustic12 = LoadBitmap("caust12.bw.jpeg");
  caustic13 = LoadBitmap("caust13.bw.jpeg");
  caustic14 = LoadBitmap("caust14.bw.jpeg");
  caustic15 = LoadBitmap("caust15.bw.jpeg");
  caustic16 = LoadBitmap("caust16.bw.jpeg");
  caustic17 = LoadBitmap("caust17.bw.jpeg");
  caustic18 = LoadBitmap("caust18.bw.jpeg");
  caustic19 = LoadBitmap("caust19.bw.jpeg");
  caustic20 = LoadBitmap("caust20.bw.jpeg");
  caustic21 = LoadBitmap("caust21.bw.jpeg");
  caustic22 = LoadBitmap("caust22.bw.jpeg");
  caustic23 = LoadBitmap("caust23.bw.jpeg");
  caustic24 = LoadBitmap("caust24.bw.jpeg");
  caustic25 = LoadBitmap("caust25.bw.jpeg");
  caustic26 = LoadBitmap("caust26.bw.jpeg");
  caustic27 = LoadBitmap("caust27.bw.jpeg");
  caustic28 = LoadBitmap("caust28.bw.jpeg");
  caustic29 = LoadBitmap("caust29.bw.jpeg");
  caustic30 = LoadBitmap("caust30.bw.jpeg");
  caustic31 = LoadBitmap("caust31.bw.jpeg");


  /* The vertices that make up our shaped panels.
   * We shift them toward the bottom-left 1/2 pixel so lines line
   * up on pixel boundaries.
   * The texture coordinates mirror the true pixel coordinates
   * divided by 256
   */
  fPanelVertices = fillstyle {
    GL.texcoord2f((x+upperBevel)<<8,
		  y<<8);
    GL.vertex3f(((x+upperBevel)<<16) - 0x8000,
		(y<<16) + 0x8000,
		0);
    GL.texcoord2f((x+w-1)<<8,
		  y<<8);
    GL.vertex3f(((x+w-1)<<16) - 0x8000,
		(y<<16) + 0x8000,
		0);
    GL.texcoord2f((x+w-1)<<8,
		  (y+h-1-lowerBevel)<<8);
    GL.vertex3f(((x+w-1)<<16) - 0x8000,
		((y+h-1-lowerBevel)<<16) + 0x8000,
		0);
    GL.texcoord2f((x+w-1-lowerBevel)<<8,
		  (y+h-1)<<8);
    GL.vertex3f(((x+w-1-lowerBevel)<<16) - 0x8000,
		((y+h-1)<<16) + 0x8000,
		0);
    GL.texcoord2f(x<<8,
		  (y+h-1)<<8);
    GL.vertex3f((x<<16) - 0x8000,
		((y+h-1)<<16) + 0x8000,
		0);
    GL.texcoord2f(x<<8,
		  (y+upperBevel)<<8);
    GL.vertex3f((x<<16) - 0x8000,
		((y+upperBevel)<<16) + 0x8000,
		0);
  };

  fEmptyPanel = fillstyle {
    var m;
    m = panelMargin/2;
    
    GL.enable(GL_BLEND);

    /* Panel border */
    GL.enable(GL_LINE_SMOOTH);
    GL.color(borderColor);
    GL.begin(GL_LINE_LOOP);
    fPanelVertices(x+m,y+m,w-m-m,h-m-m);
    GL.end();
    GL.disable(GL_LINE_SMOOTH);
  };

  fGlowPanel = fillstyle {
    var m;
    m = panelMargin/2;

    GL.enable(GL_BLEND);

    /* Panel interior - solid */
    GL.color(bgcolor | PGCF_ALPHA | alpha);
    GL.begin(GL_POLYGON);
    fPanelVertices(x+m,y+m,w-m-m,h-m-m);
    GL.end();

    fEmptyPanel(x,y,w,h);
  };

  fWetPanel = fillstyle {
    var frame, texture, m;
    
    m = panelMargin/2;
    frame = (ticks >> 5) & 31;

    /* Yes, this is terribly ugly */
    texture = frame== 0 ? caustic00 :
              frame== 1 ? caustic01 :
              frame== 2 ? caustic02 :
              frame== 3 ? caustic03 :
              frame== 4 ? caustic04 :
              frame== 5 ? caustic05 :
              frame== 6 ? caustic06 :
              frame== 7 ? caustic07 :
              frame== 8 ? caustic08 :
              frame== 9 ? caustic09 :
              frame==10 ? caustic10 :
              frame==11 ? caustic11 :
              frame==12 ? caustic12 :
              frame==13 ? caustic13 :
              frame==14 ? caustic14 :
              frame==15 ? caustic15 :
              frame==16 ? caustic16 :
              frame==17 ? caustic17 :
              frame==18 ? caustic18 :
              frame==19 ? caustic19 :
              frame==20 ? caustic20 :
              frame==21 ? caustic21 :
              frame==22 ? caustic22 :
              frame==23 ? caustic23 :
              frame==24 ? caustic24 :
              frame==25 ? caustic25 :
              frame==26 ? caustic26 :
              frame==27 ? caustic27 :
              frame==28 ? caustic28 :
              frame==29 ? caustic29 :
              frame==30 ? caustic30 : 
                          caustic31 ;

    GL.enable(GL_BLEND);

    /* Panel interior - caustics */
    GL.enable(GL_TEXTURE_2D);
    GL.bindtexture(texture);
    GL.texparameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
    GL.texparameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);
    GL.color(bgcolor | PGCF_ALPHA | causticsAlpha);
    GL.begin(GL_POLYGON);
    fPanelVertices(x+m,y+m,w-m-m,h-m-m);
    GL.end();
    GL.disable(GL_TEXTURE_2D);

    fGlowPanel(x,y,w,h);
  };
  
  bgcolor       = 0xe5e8fd;
  borderColor   = 0xe5e8ff;
  alpha         = 0x40000000;
  causticsAlpha = 0x30000000;

  cursorbitmap = LoadBitmap("cursor.png");
  cursorbitmask = 0;

  margin = 10;
  panelMargin = 10;
  upperBevel = 10;
  lowerBevel = 20;
}

object button {
  bgfill = Copy(default::fGlowPanel);
  lowerBevel = 12;
  height = 28;
  width = 28;
  margin = 15;
  spacing = 5;
  panelMargin = 2;
  bgcolor = 0xb8b7ff;
  alpha = 0x50000000;
  fgcolor = PGCF_ALPHA | 0x50000000 | PGC_BLACK;
  borderColor = PGCF_ALPHA | 0x50000000 | PGC_WHITE;
}

object button.hilight {
  alpha = 0x7f000000;
  fgcolor = PGC_BLACK;
  borderColor = PGC_WHITE;
}

object button.on {
  bgcolor = 0xEDEDFF;
}

object field {
  bgfill = Copy(default::fEmptyPanel);
  bgcolor = 0x202020;
}

object box bgfill = Copy(default::fWetPanel);

object panel {
  bgfill = Copy(default::fWetPanel);
  margin = 4;
  panelMargin = 2;
  border.size = 5;
}

object panelbar {
  bgfill = Copy(default::fGlowPanel);
  lowerBevel = 12;
  height = 28;
  width = 28;
  margin = 2;
  panelMargin = 2;
  bgcolor = 0xcad1f9;
}

object base.panelbtn {
  spacing = 2;
  side = PG_S_RIGHT;
}

object closebtn text = "Close";
object rotatebtn text = "Rotate";

object zoombtn { 
  width = 0;
  height = 0;
}

object tab.page parent = PGTH_O_BOX;

/*
object background {
  cursorbitmap = LoadBitmap("crosshair.png");
  cursorbitmask = 0;
  crsrhotspot.x = 22; 
  crsrhotspot.y = 22;
}
*/
