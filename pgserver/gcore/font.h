/*
 * font.h - structures for representing fonts
 * 
 * Micah Dowty <micah@homesoftware.com>
 * 
 * This file is released under the GPL. Please see the file COPYING that
 * came with this distribution.
 */

#ifndef __H_FONT
#define __H_FONT

struct fontdesc;
struct fontstyle_node;
struct font;

extern struct fontstyle_node *fontstyles;   /* Head of a linked list
					       of font styles */

#include <video.h>
#include <handle.h>

typedef long stylet;

/* A description of a particular instance of a font - the font structure
   and parameters that effect how it is rendered
*/
struct fontdesc {
  struct font *font;
  struct fontstyle_node *fs;   /* The fontstyle this was generated from */
  int interline_space;  /* Extra spacing between lines, for
			   doublespace, etc. */
  int interchar_space;  /* Extra spacing between characters,
			   for expanded text */
  int margin;
  int boldw;    /* If nonzero, font will be offset and duplicated this
		   many times to produce bold.  Must use lgop == LGOP_OR
		   for this to work. */
  int hline;    /* If this is non-negative, draw a horizontal line at this many
		   pixels down from the top of the font. Can be used to
		   create underline, overline, or strikeout. */
  devcolort hline_c;   /* Color used to draw the hline */
  int skew;     /* If nonzero, an italic is generated by shearing the
		   image horizontally one pixel for every 'skew' vertical
		   pixels */
  int italicw;  /* Extra width added by the italic */
};

extern handle defaultfont;

/* Flags for a font style */
#define FSTYLE_FIXED      (1<<0)
#define FSTYLE_DEFAULT    (1<<1)    /* The default font in its category,
				       fixed or proportional. */
#define FSTYLE_SYMBOL     (1<<2)    /* Font contains special chars not letters
				       and will not be chosen unless
				       specifically asked for */
#define FSTYLE_SUBSET     (1<<3)    /* Font does not contain all the ASCII
				       chars before 127, and shouldn't
				       be used unless asked for */
#define FSTYLE_EXTENDED   (1<<4)    /* Contains international characters
				       above 127 and will be used if this
				       is requested */
#define FSTYLE_IBMEXTEND  (1<<5)    /* Has IBM-PC extended characters */

/* These FSTYLE_* options should only be used for findfont, not in
 * a fontstyle_node.
 */
#define FSTYLE_DOUBLESPACE (1<<7)
#define FSTYLE_BOLD       (1<<8)
#define FSTYLE_ITALIC     (1<<9)
#define FSTYLE_UNDERLINE  (1<<10)
#define FSTYLE_STRIKEOUT  (1<<11)
#define FSTYLE_GRAYLINE   (1<<12)  /* A faint underline */
#define FSTYLE_FLUSH      (1<<14)  /* No margin */
#define FSTYLE_DOUBLEWIDTH (1<<15)
#define FSTYLE_ITALIC2     (1<<16) /* Twice the normal italic */

/* This is a description that goes along with a font style.
   It indicates its name, size, bold, italic, etc.
   This is searched to produce a fontdesc. */
struct fontstyle_node {
  char *name;
  int size;
  long flags;
  struct fontstyle_node *next;

  /* Various versions of this font. If one of these is NULL it can be
   * synthesized from the above information */
  struct font *normal;
  struct font *bold;
  struct font *italic;
  struct font *bolditalic;

  int ulineh;   /* Height at which to place the underline */
  int slineh;   /* Height at which to place a strikeout line */
  int boldw;    /* Width of a bold if a bold version is not available */
};

/* An individual bitmapped font */
struct font {
  unsigned char *bitmaps;   /* Table of converted bitmaps */
  int h;
  int hspace; /* Space between characters */
  int vspace; /* Space between lines */
  unsigned char *vwtab; /* table of character widths, indexed by ASCII value */
  long *trtab;    /* This table translates ASCII values
		    to bitmap indices. A negative bitmap index indicates
		    a blank. To get the data for a char, add it's trtab
		    value to 'bitmaps' 
		  */
};

/******** Functions */

/* Copy a character to the screen, producing any special effects as
 * requested by the fontdesc.
 */
void outchar(struct cliprect *clip, struct fontdesc *fd,
	     int *x, int *y,devcolort col,char c);

/* These functions interpret the '\n' character, but no other control
 * chars
 */
void outtext(struct cliprect *clip,struct fontdesc *fd,
	     int x,int y,devcolort col,char *txt);
void sizetext(struct fontdesc *fd, int *w, int *h, char *txt);

/* Find a font with specified characteristics, and prepare
   a fontdesc structure for it.  The closest font will be matched.
   Any of the FSTYLE_* flags can be used to indicate that attribute
   is required. 
*/
g_error findfont(handle *pfh,int owner, char *name,int size,stylet flags);

#endif /* __H_FONT */

/* The End */

