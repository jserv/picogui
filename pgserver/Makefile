# $Id: Makefile,v 1.65 2001/03/08 01:22:22 micahjd Exp $
#
# PicoGUI small and efficient client/server GUI
# Copyright (C) 2000,2001 Micah Dowty <micahjd@users.sourceforge.net>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# 
# Contributors:
#
#
# $Log: Makefile,v $
# Revision 1.65  2001/03/08 01:22:22  micahjd
# Added an infrastructure for automatically selecting a bitmap's format and
# using the appropriate format. So far only the PNM loader is present, but
# more formats can now be added.
#
# Revision 1.64  2001/03/03 04:19:31  micahjd
# Fixed make error when no .config exists, updated configuration defaults
#
# Revision 1.63  2001/03/03 01:44:24  micahjd
# Added an option to disable the panelbar.
# Fixed a bug in container redrawing.
# Cleaned up widget_set and implemented PG_WP_SIZEMODE.
#
# Revision 1.62  2001/03/01 02:23:09  micahjd
# Finished SDL emulation of low bit depths, got at least stubs working for linear1,linear2,linear4,and linear16.
#
# Revision 1.61  2001/02/28 00:19:05  micahjd
# Added low bit depth emulation to the SDL driver, removed the broken cruft from
# svgafb, and updated the menus
#
# Revision 1.60  2001/02/23 17:51:40  pney
# Add option for touch screen input driver support.
#
# Revision 1.59  2001/02/23 04:44:45  micahjd
# Added many more configuration options, and started a working (hopefully?) but slow
# linear1 and linear2
#
# Revision 1.58  2001/02/17 05:52:15  micahjd
# Oops, left sdlfb out of the makefile...
#
# Revision 1.57  2001/02/17 05:17:55  micahjd
# Implemented video test patterns (-s command line option)
#
# Revision 1.56  2001/02/15 17:02:19  pney
# Add dependence on /include/pgserver/autoconf.h. It have to be regenerated
# when .config is modified.
#
# Revision 1.55  2001/02/14 11:34:56  bauermeister
# If make is invoked with DEFCONFIGFROM=<file> and .config does not exist,
# the config is first reconstructed using the given <file>. This allows
# fully non-interactive builds.
#
#

# Config file generated by menuconfig or config
ifeq (.config,$(wildcard .config))
include .config
else
do-it-all:	config
endif

######## Add new source and header files here

### Required source files

BINNAME = pgserver

SRC := \
    widget/bitmap.c \
    widget/indicator.c \
    widget/label.c \
    widget/toolbar.c \
    widget/scroll.c \
    widget/widget.c \
    widget/button.c \
    widget/popup.c \
    widget/box.c \
    widget/field.c \
    widget/background.c \
    widget/menuitem.c \
    \
    gcore/grop.c \
    gcore/g_malloc.c \
    gcore/div.c \
    gcore/font.c \
    gcore/handle.c \
    gcore/g_error.c \
    gcore/timer.c \
    gcore/errortext.c \
    gcore/video.c \
    gcore/input.c \
    gcore/driverinfo.c \
    gcore/pgmain.c \
    \
    appmgr/global.c \
    \
    net/request.c \
    net/dispatch.c \
    net/eventq.c \
    \
    vidbase/defaultvbl.c \
    \
    theme/memtheme.c \
    theme/fillstyle.c \


### Optional source files

# Drivers
ifneq ($(DRIVER_SVGAGL),)
    SRC := $(SRC) video/svgagl.c
endif
ifneq ($(DRIVER_EZ328),)
    SRC := $(SRC) video/ez328.c
endif
ifneq ($(DRIVER_SDL),)
    SRC := $(SRC) video/sdl.c
endif
ifneq ($(DRIVER_SDLFB),)
    SRC := $(SRC) video/sdlfb.c
endif
ifneq ($(DRIVER_SVGAFB),)
    SRC := $(SRC) video/svgafb.c
endif
ifneq ($(DRIVER_NCURSES),)
    SRC := $(SRC) video/ncurses.c
endif
ifneq ($(DRIVER_NULL),)
    SRC := $(SRC) video/null.c
endif
ifneq ($(DRIVER_FBDEV),)
    SRC := $(SRC) video/fbdev.c
endif
ifneq ($(DRIVER_SDLINPUT),)
    SRC := $(SRC) input/sdlinput.c
endif
ifneq ($(DRIVER_SVGAINPUT),)
    SRC := $(SRC) input/svgainput.c
endif
ifneq ($(DRIVER_NCURSESINPUT),)
    SRC := $(SRC) input/ncursesinput.c
endif
ifneq ($(DRIVER_TSINPUT),)
    SRC := $(SRC) input/tsinput.c
endif

# Debugging
ifneq ($(CONFIG_VIDEOTEST),)
    SRC := $(SRC) debug/videotest.c
endif

# Video base libraries
ifneq ($(CONFIG_VBL_LINEAR1),)
    SRC := $(SRC) vidbase/linear1.c
endif
ifneq ($(CONFIG_VBL_LINEAR2),)
    SRC := $(SRC) vidbase/linear2.c
endif
ifneq ($(CONFIG_VBL_LINEAR4),)
    SRC := $(SRC) vidbase/linear4.c
endif
ifneq ($(CONFIG_VBL_LINEAR8),)
    SRC := $(SRC) vidbase/linear8.c
endif
ifneq ($(CONFIG_VBL_LINEAR16),)
    SRC := $(SRC) vidbase/linear16.c
endif

# Optional widgets
ifneq ($(CONFIG_WIDGET_TERMINAL),)
    SRC := $(SRC) widget/terminal.c
endif
ifneq ($(CONFIG_WIDGET_CANVAS),)
    SRC := $(SRC) widget/canvas.c
endif
ifneq ($(CONFIG_NOPANELBAR),)
    SRC := $(SRC) widget/panel_nobar.c
else
    SRC := $(SRC) widget/panel.c
endif

# Bitmap formats
ifneq ($(CONFIG_FORMAT_PNM),)
    SRC := $(SRC) formats/pnm.c
endif

# These are lists used in macro-driven function tables
INC := net/requests.inc gcore/inputdrivers.inc gcore/videodrivers.inc

HDR := include/pgserver/*.h include/picogui/*.h

CFLAGS := -Iinclude

######## Flags and Tools

CFLAGS := $(CFLAGS) -c
LDFLAGS :=

# These are default, can be overridden later
GCC := gcc
STRIP := strip

# Don't bother with -g if we will strip
ifneq ($(CONFIG_NOSTRIP),)
        CFLAGS := $(CFLAGS) -g
else
        CFLAGS := $(CFLAGS) -fomit-frame-pointer
endif

# Target platform
ifneq ($(WINDOWS),)
	GCC := i386-mingw32-$(GCC)
	STRIP := i386-mingw32-$(STRIP)
	BINNAME := $(BINNAME).exe
	LDFLAGS := $(LDFLAGS) -lwsock32 -lwinmm
endif
ifneq ($(UCLINUX),)
        GCC := m68k-pic-coff-gcc
        CFLAGS := $(CFLAGS) -fPIC
        BINNAME := uclinux-$(BINNAME)
	SRC := $(SRC) os/uclinux/platform.c

	# With position independant code, function pointers can't be
        # set at compile-time??
	CFLAGS := $(CFLAGS) -DRUNTIME_FUNCPTR
endif

# Extra compiler flags needed by drivers

ifneq ($(DRIVER_SDL)$(DRIVER_SDLFB),)
        # Use sdl-config
	SDLCONFIG := sdl-config
	ifneq ($(WINDOWS),)
		SDLCONFIG := i386-mingw32-sdl-config
	endif

        # Libraries and includes for SDL
	CFLAGS := $(CFLAGS) $(shell $(SDLCONFIG) --cflags) 
	LDFLAGS := $(LDFLAGS) $(shell $(SDLCONFIG) --libs)
endif

ifneq ($(DRIVER_SVGAGL),)
	LDFLAGS := $(LDFLAGS) -lvga -lvgagl
endif

ifneq ($(DRIVER_SVGAFB),)
        LDFLAGS := $(LDFLAGS) -lvga
endif

ifneq ($(DRIVER_NCURSES),)
        LDFLAGS := $(LDFLAGS) -lncurses -lgpm
endif

# More compiler flags...
ifeq ($(CONFIG_NO_OPTIMIZE),)
        CFLAGS := $(CFLAGS) -O3
endif
ifneq ($(CONFIG_EFENCE),)
        LDFLAGS := $(LDFLAGS) -lefence
endif
ifneq ($(CONFIG_GCOV),)
        CFLAGS := $(CFLAGS) -fprofile-arcs -ftest-coverage
endif
ifneq ($(CONFIG_GPROF),)
        CFLAGS := $(CFLAGS) -pg
	LDFLAGS := $(LDFLAGS) -pg
endif

# Generate a list of object files
OBJ := $(SRC:.c=.o) font/fontdata.o

### Rules

all : $(BINNAME)

clean:
	rm -f $(BINNAME) $(BINNAME).coff .da *.bb *.bbg $(OBJ) core 

$(BINNAME): $(OBJ) $(HDR)
	$(GCC) -o $(BINNAME) $(OBJ) $(LDFLAGS)
ifeq ($(UCLINUX),)
ifeq ($(CONFIG_NOSTRIP),)
	$(STRIP) $(BINNAME)
endif
endif

# Oodles of scripts to convert the .fdf and .fi files into
# an object file
font/fontdata.o : font/*.fdf font/*.fi script/fontdef.pl .config
	chmod a+x script/*.pl
	script/fontdef.pl > fonts.tmp.c
	$(GCC) -o font/fontdata.o fonts.tmp.c $(CFLAGS)
	rm -f fonts.tmp.c

%.o : %.c $(HDR) $(INC) .config
	$(GCC) -o $@ $< $(CFLAGS)

.config: 
ifeq ($(DEFCONFIGFROM),)
	make -C configscript/lxdialog all
	sh configscript/Menuconfig config.in
else
	@echo "Using default config file: $(DEFCONFIGFROM)"
	cp $(DEFCONFIGFROM) .config
	(sed "s/.*//g" config.in | sh configscript/Configure config.in);
endif

menuconfig:
	make -C configscript/lxdialog all
	sh configscript/Menuconfig config.in

config:
	sh configscript/Configure config.in

include/pgserver/autoconf.h: .config
	(sed "s/.*//g" config.in | sh configscript/Configure config.in);

info:
	@echo "SRC      : [${SRC}]"
	@echo "HEADER   : [${HDR}]"
	@echo "CFLAGS   : [$(CFLAGS)]"
	@echo "LDFLAGS  : [$(LDFLAGS)]"

### The End ###
