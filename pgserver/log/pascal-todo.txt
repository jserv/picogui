
   From:   Pascal Bauermeister <pascal.bauermeister@smartdata.ch>
   Date:   Thu, 15 Mar 2001 14:53:21 +0100
   To:   pgui-devel <pgui-devel@lists.sourceforge.net>, Philippe Ney
   <philippe.ney@smartdata.ch>, Micah Dowty <micah@homesoftware.com>
   Cc:   Jean-pierre Buttet <jean_pierre.buttet@smartdata.ch>, Blaise Crettol
   <blaise.crettol@smartdata.ch>
   Subject:   [Pgui-devel] Very next steps for PicoGUI
  ____________________________________________________________________________________
Hello everybody, 
 
at Smartdata we are working on a new version of our device that will be given to 
the marketing guys for their next campaign. For this we are designing a demo application 
using, among other things, PGUI. 
 
We have a bunch of open issues that need to be solved before we can begin writing 
the application. Most of them can be solved by the Smartdata people, but a few would 
be best solved by Micah. 
 
We need to reach quickly a stable state in the PGUI project. Stable means for me: 
all problems known, and some very blocking problems corrected. I want to reach ASAP 
this state then set a branch on which we continue fixing the current problem, and 
let the trunk for new developments. 
 
The annex 1 show in which order I suggest to proceed. 
 
The annex 2 is a list of the open topics. I've assigned the name of one suggested 
responsible person for each point. 
 
Immediate actions: A points.  
Next actions: after the answers to the A questions, the devel community will review 
in detail the B points and allocate the resources. 
 
Thank you everybody for your kind collaboration. 
 
 
With Best regards, 
 
  Pascal 
 
--  
  Pascal Bauermeister 
  Head of Software Development 
 
  SMARTDATA 
  PSE-A / EPFL 
  CH-1015 Lausanne 
 
  [1]http://www.smartdata.ch
  mailto:pascal.bauermeister@smartdata.ch
  Phone: +41 (21) 693 84 98
  fax:   +41 (21) 693 84 91

__________________________________________________________________________

ANNEX 1 - Phases
__________________________________________________________________________

Phase 1
  The A-priority point should be solved before any
  new development is started so as to avoid confusion
  an potentially new problems.

Phase 2
  After the A points are done and tested, we make an
  official release, including a project snapshot and
  a tag over all files. An official to-do-list to be
  published, plus a list of the ongoing topics.

Phase 3
  Then, we create a CVS branch, to hold all changes due
  to the work on the B points. In this way, Micah can
  go on developing on the trunk too.

Phase 4
  Then we attack the B points, and commit B related
  things on the branch.

Phase 5
  When the B points are done, we make a release on
  the branch. We'll base our app on that release.

Phase 6
  Finally, we'll merge the change with the trunk.


__________________________________________________________________________

ANNEX 2 - List of open topics
__________________________________________________________________________


A-Priority
----------

A01.
  Topic:  Theme refresh bug, supposed to be an endianness problem
  Action: Correction
  Person: Micah

A02.
  Topic:  Screen rotation.
      We want it at least in the driver. We need something like this:
      - a client function to ask for a landscape/portrait orientation
      - the server propagates the call to the driver
      - the driver holds a local variable, and swaps x/y and possibly
        accelerator functions doing memset/memcpy and slab/bar, etc.
      - the driver announces now the resolution according to the new
        orientation
      - the server refreshes the display

  Action: a) Answer q: what must be done in the server
      b) Answer q: what must be done in the driver
      c) Answer q: what must be done in the client

  Person: a):   Micah
      else: Philippe

A03.
  Topic:  Depth switching
      We need something like this:
      - a client function to ask for a default/1/2/4/etc bpp
      - the server propagates the call to the driver
      - the driver is a wrapper to the other 1/2/4/etc bpp drivers
      - the driver announces a depth according to the new
        depth
      - the server refreshes the display

  Action: a) Answer q: what must be done in the server
      b) Answer q: what must be done in the driver
      c) Answer q: what must be done in the client

  Person: a):   Micah
      else: Philippe

A04.
  Topic:  Absolute position of a widget (needed in a canvas to convert
      pen event coordinates from relative to absolute - needed for
      touchscreen calibration utility)

  Action: Answer q: How to get the absolute position of a widget

  Person: Micah


B-Priority
----------

B01.
  Topic:  Fonts

  Action: Generate a bunch of fonts with several sizes for each one
      It'll be decided in the .config which ones will be used

  Person: Philippe

B02.
  Topic:  Images loading

  Action: Test the image loading of a 1 and 4 bpp image taking the half
      of the ChipSlice screen, and judge the performances

  Person: Philippe

B03.
  Topic:  Native image format (server-native, not video-mem native!)

  Action: - define the native format so that loading is very optimal
        for the server
      - write a utility to run during build, in order to convert
        pnm images to the native format
      - add in the server the ability to load the native format

  Person: Pascal

B04.
  Topic:  Canvas drawings - evaluation

  Action: - in a canvas, test pixels, lines, text, images
      - Answer q: what function is missing

  Person: Philippe

B05.
  Topic:  Canvas drawings - implementation
  Action: Implement missing functions according to B04
  Person: TBD

B06.
  Topic:  PGUI port on XCopilot
  Action: see topic
  Person: Pascal

B07.
  Topic:  Screen rotation.

  Action: a) implement A02-a
      b) implement A02-b
      c) implement A02-c

  Person: a)    Micah
      else: Philippe

B08.
  Topic:  Depth switching

  Action: a) implement A03-a
      b) implement A03-b
      c) implement A03-c

  Person: a)    Micah
      else: Philippe

__________________________________________________________________________
[END]

_______________________________________________
Pgui-devel mailing list
Pgui-devel@lists.sourceforge.net
[2]http://lists.sourceforge.net/lists/listinfo/pgui-devel

References

   1. http://mail.telocity.com//jump/http://www.smartdata.ch
   2. http://mail.telocity.com//jump/http://lists.sourceforge.net/lists/listinfo/pgui-devel
