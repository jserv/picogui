#
# Currently just a scratchpad for testing whatever happens to need it
#

import PGBuild.Node.XML
env = Environment()

# Create a node to represent a tag in an XML file. Note
# how the Document object can be addressed in standard DOM fashion.
testFile = env.fs.Entry("test.xml")
doc = PGBuild.Node.XML.Document(testFile)
tag = doc.childNodes[0].getElementsByTagName("important")[0]
print tag.toprettyxml()

# Build a 'hello world'
prog = env.Program('hello', 'hello.c')
Default(prog)

# Add a dependency, so the hello world should be rebuilt
# when we change the <important/> part of the XML document,
# but not when we change other parts.
env.Depends(prog, tag)

