#!/usr/bin/env python
#
# From the activity.log generated by getactivity.sh,
# collect number of lines and number of commits for
# each user.
#

totalLines = 0
totalRevs = 0
users = {}

for line in open('activity.log').xreadlines():
    (revision, time, user, lines) = line.split()

    # 'micahjd' was micah's old username
    if user == 'micahjd':
        user = 'micah'

    # Accumulate stats per user
    try:
        users[user]
    except KeyError:
        users[user] = (0,0)
    users[user] = (users[user][0] + 1, users[user][1] + int(lines))
    totalLines += int(lines)
    totalRevs += 1

print "For youngest revision %s:\n" % revision

# Collect user lists sorted by revision and sorted by lines
usersByRev = users.keys()
usersByLines = users.keys()
usersByRev.sort(lambda a,b: users[b][0] - users[a][0])
usersByLines.sort(lambda a,b: users[b][1] - users[a][1])

# Print them side-by-side
print "%-40s%-40s" % (" Revisions committed:", " Lines added/removed:")
for i in xrange(len(users.keys())):
    print "%-40s%-40s" % ("%20s: %-6d %6.02f%%" % (usersByRev[i],
                                                   users[usersByRev[i]][0],
                                                   users[usersByRev[i]][0] * 100.0 / totalRevs),
                          "%20s: %-8d %6.02f%%" % (usersByLines[i],
                                                   users[usersByLines[i]][1],
                                                   users[usersByLines[i]][1] * 100.0 / totalLines)) 
# Print totals
print "\n%-40s%-40s" % ("%20s: %d" % ("Total", totalRevs),
                        "%20s: %d" % ("Total", totalLines))

                        
