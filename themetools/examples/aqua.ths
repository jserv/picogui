/* $Id: aqua.ths,v 1.15 2000/10/29 20:53:52 micahjd Exp $
 *
 * The obligatory Aqua theme (every OS has one, right :)
 * Looks nice, and it's a good test of the server's bitmap primitives.
 *
 * Micah Dowty
 */

/* The stripey background */
object default {
  bgfill = fillstyle {
    Bitmap(x,y,w,h,bitmap1,PG_LGOP_NONE,0,0);
  };
  bitmap1 = LoadBitmap("data/aq_bg.pnm");
}

/* Jellybean-like buttons! */
object button {
  bitmap1 = LoadBitmap("data/aq_button.pnm");
  bgfill = fillstyle {
    /* Cut and paste things to resize the button bitmap */
    Bitmap(x,y,12,20,bitmap1,PG_LGOP_NONE,0,0);
    Bitmap(x+w-12,y,12,20,bitmap1,PG_LGOP_NONE,49,0);
    Tilebitmap(x+12,y,w-24,20,bitmap1,15,0,1,20);
  };
  height = 20;
  width  = 21;   // Tiny buttons get a cute sphere shape :)
  margin = 8;
  spacing = 2;
}
/* For different states, just change the bitmap */
object button.on bitmap1 = LoadBitmap("data/aq_button_on.pnm");
object button.hilight bitmap1 = LoadBitmap("data/aq_button_over.pnm");

/* This defines a resizable grey box, used in all base.display-derived
   widgets, and a few others (like scroll) 
*/
object base.display {
  bitmap1 = LoadBitmap("data/aq_box.pnm");
  bgfill = fillstyle {
    /* Like the button, but expand the border in 2 dimensions and
       fill with a solid color */

    /* Top edge */
    Tilebitmap(x+5,y,w-10,10,bitmap1,5,0,5,10);
    Bitmap(x,y,5,10,bitmap1,PG_LGOP_NONE,0,0);
    Bitmap(x+w-5,y,5,10,bitmap1,PG_LGOP_NONE,12,0);

    /* Bottom edge */
    Tilebitmap(x+5,y+h-10,w-10,10,bitmap1,5,9,5,10);
    Bitmap(x,y+h-10,5,10,bitmap1,PG_LGOP_NONE,0,9);
    Bitmap(x+w-5,y+h-10,5,10,bitmap1,PG_LGOP_NONE,12,9);

    /* Left and right edges */
    Tilebitmap(x,y+10,5,h-20,bitmap1,0,8,5,4);
    Tilebitmap(x+w-5,y+10,5,h-20,bitmap1,12,8,5,4);

    /* Filling */
    Rect(x+5,y+10,w-10,h-20,ColorConv(0xe7e7e7));

    /* space from the edge */
    x = x+3; y = y+3;
    w = w-6; h = h-6;
  };
}

object indicator {
  /* Same overlay as scroll bar */
  overlay = Copy(scroll::overlay);
  width = 16;
  margin = 3;
}

/* Nice scrollbar thumb (doubles as indicator overlay) */
object scroll {
  bitmap2 = LoadBitmap("data/aq_thumb_v.pnm");
  overlay = fillstyle {

    /* Make a minimum height 
     * FIXME: With real if/else conditionals this would
     * be _much_ nicer
     */
    var z;
    z = h<10 ? 10-h : 0;
    h = h>10 ? h : 10;
    y = z ? y-z : y;

    Bitmap(x,y,10,5,scroll::bitmap2,PG_LGOP_NONE,0,0);
    Tilebitmap(x,y+5,10,h-10,scroll::bitmap2,0,5,10,10);
    Bitmap(x,y+h-5,10,5,scroll::bitmap2,PG_LGOP_NONE,0,17);
  };
  width = 13;
  margin = 0;

  /* A simple background for the thumb to slide in */
  bitmap1 = LoadBitmap("data/aq_trough_v.pnm");
  bgfill = fillstyle {
    Bitmap(x,y,13,20,scroll::bitmap1,PG_LGOP_NONE,0,0);
    Tilebitmap(x,y+20,13,h-40,scroll::bitmap1,0,20,13,5);
    Bitmap(x,y+h-20,13,20,scroll::bitmap1,PG_LGOP_NONE,0,25);

    /* Don't quite go all the way to the top/bottom */
    y = y+4;
    h = h-8;
    /* Center the thumb */
    x = x+2;
  };
}

object label margin = 8;

/* Use a simple scrollbar-safe background when the label scrolls */
object label.scroll {
  bgfill = fillstyle {
    Rect(x,y,w,h,ColorConv(0xe7e7e7));
  };
}

/* Wallpaper */
object background bitmap1 = LoadBitmap("data/aq_screenbg.pnm");

/* Interactive titlebar */
object panel margin = 10;
object panelbar {
  bitmap1 = LoadBitmap("data/aq_title_wht_v.pnm");
  width = 20;
}
object panelbar.hilight bitmap1 = LoadBitmap("data/aq_title_blu_v.pnm");

object box {
  height = 30;
  margin = 4;
  bgfill = Copy(base.display::bgfill);     // Use the same nifty box
  bitmap1 = Copy(base.display::bitmap1);
}

object toolbar {
  bgfill = fillstyle {
    Bitmap(x,y,w,h,bitmap1,PG_LGOP_NONE,0,0);
    Frame(x,y,w,h,ColorConv(0x808080));
    Gradient(x,y,margin,h,0,0x404040,0x000000,-1);
    Gradient(x,y,w,margin,90,0x404040,0x000000,-1);
  };
  margin = 5;
}

object popup {
  /* Normal background, but with shading on the edge, and 
     a thin black border */
  bgfill = fillstyle {
    Bitmap(x,y,w,h,bitmap1,PG_LGOP_NONE,0,0);
    Frame(x,y,w,h,ColorConv(0x000000));
    Gradient(x+w-margin,y,margin,h,0,0x000000,0x808080,-1);
    Gradient(x,y+h-margin,w,margin,90,0x000000,0x808080,-1);
  };
  margin = 7;
}

/* The End */
