/* $Id: aqua.ths,v 1.28 2001/04/29 17:29:06 micahjd Exp $
 *
 * The obligatory Aqua theme (every OS has one, right :)
 * Looks nice, and it's a good test of the server's bitmap primitives.
 *
 * Micah Dowty
 */

/* The stripey background */
object default {
  bgfill = fillstyle {
    Bitmap(x,y,w,h,bitmap1);
  };
  bitmap1 = LoadBitmap("data/aq_bg.pnm");
margin=0;
}

/* Jellybean-like buttons! */
object button {
  bitmap1 = LoadBitmap("data/aq_button.pnm");
  bgfill = fillstyle {
    /* Cut and paste things to resize the button bitmap */
    Bitmap(x,y,12,20,bitmap1);
    SetSrc(49,0,0,0);
    Bitmap(x+w-12,y,12,20,bitmap1);
    SetSrc(15,0,1,20);
    Tilebitmap(x+12,y,w-24,20,bitmap1);
  };
  height = 20;
  width  = 21;   // Tiny buttons get a cute sphere shape :)
  margin = 8;
  spacing = 2;
}
/* For different states, just change the bitmap */
object button.on bitmap1 = LoadBitmap("data/aq_button_on.pnm");
object button.hilight bitmap1 = LoadBitmap("data/aq_button_over.pnm");

object flatbutton {
  margin = 6;
  spacing = 1;
}
   
/* This defines a resizable grey box, used in all base.display-derived
   widgets, and a few others (like scroll) 
*/
object base.display {
  bitmap1 = LoadBitmap("data/aq_box.pnm");
  bgfill = fillstyle {
    /* Like the button, but expand the border in 2 dimensions and
       fill with a solid color */

    /* Top edge */
    SetSrc(5,0,5,10);
    Tilebitmap(x+5,y,w-10,10,bitmap1);
    SetSrc(0,0,0,0);
    Bitmap(x,y,5,10,bitmap1);
    SetSrc(12,0,0,0);
    Bitmap(x+w-5,y,5,10,bitmap1);

    /* Bottom edge */
    SetSrc(5,9,5,10);
    Tilebitmap(x+5,y+h-10,w-10,10,bitmap1);
    SetSrc(0,9,0,0);
    Bitmap(x,y+h-10,5,10,bitmap1);
    SetSrc(12,9,0,0);
    Bitmap(x+w-5,y+h-10,5,10,bitmap1);

    /* Left and right edges */
    SetSrc(0,8,5,4);
    Tilebitmap(x,y+10,5,h-20,bitmap1);
    SetSrc(12,8,5,4);
    Tilebitmap(x+w-5,y+10,5,h-20,bitmap1);

    /* Filling */
    SetColor(0xE7E7E7);
    Rect(x+5,y+10,w-10,h-20);

    /* space from the edge */
    x = x+2; y = y+2;
    w = w-4; h = h-4;
  };
}

object indicator {
  /* Same overlay as scroll bar */
  overlay = Copy(scroll::overlay);
  width = 14;
  margin = 0;
}

/* Nice scrollbar thumb (doubles as indicator overlay) */
object scroll {
  bitmap2 = LoadBitmap("data/aq_thumb_v.pnm");
  bitmap3 = LoadBitmap("data/aq_thumb_h.pnm");
  overlay = fillstyle {
    /* This would all be much nicer with real if/else conditionals */
    var hz,bmp;
    hz = w>h;
    bmp = hz ? scroll::bitmap3 : scroll::bitmap2;

     SetSrc(0,0,0,0);    /* Because the rendering engine is not
			  * reset before drawing an overlay */
     Bitmap(x,y,hz?5:10,hz?10:5,bmp);
     SetSrc(hz?5:0,hz?0:5,10,10);
     Tilebitmap(x+(hz?5:0),y+(hz?0:5),hz?w-10:10,hz?10:h-10,bmp);
     SetSrc(hz?17:0,hz?0:17,0,0);
     Bitmap(hz?x+w-5:x,hz?y:y+h-5,hz?5:10,hz?10:5,bmp);
  };
  width = 13;
  margin = 0;

  /* A simple background for the thumb to slide in */
  bitmap1 = LoadBitmap("data/aq_trough_v.pnm");
  bgfill = fillstyle {
    Bitmap(x,y,13,20,scroll::bitmap1);
    SetSrc(0,20,13,5);
    Tilebitmap(x,y+20,13,h-40,scroll::bitmap1);
    SetSrc(0,25,0,0);
    Bitmap(x,y+h-20,13,20,scroll::bitmap1);

    /* Don't quite go all the way to the top/bottom */
    y = y+4;
    h = h-8;
    /* Center the thumb */
    x = x+2;
  };
}

object label margin = 8;

/* Use a simple scrollbar-safe background when the label scrolls */
object label.scroll {
  bgfill = fillstyle {
    SetColor(0xE7E7E7);
    Rect(x,y,w,h);
  };
}

/* Wallpaper */
object background bitmap1 = LoadBitmap("data/aq_screenbg.pnm");

/* Interactive titlebar */
object panel margin = 10;
object panelbar {
  bitmap1 = LoadBitmap("data/aq_title_wht_v.pnm");
  bitmap2 = LoadBitmap("data/aq_title_wht_h.pnm");
  bgfill = fillstyle {
    Bitmap(x,y,w,h,h>w ? bitmap1 : bitmap2);
    SetColor(0xC0C0C0);
    Frame(x,y,w,h);
  };
  width = 20;
}
object panelbar.hilight {
  bitmap1 = LoadBitmap("data/aq_title_blu_v.pnm");
  bitmap2 = LoadBitmap("data/aq_title_blu_h.pnm");
}

/* Panelbar buttons */
object base.panelbtn {
  width = 20;
  height = 20;
  spacing = 0;
  margin = 0;
  bgfill = Copy(default::bgfill);
} 
object closebtn bitmap1 = LoadBitmap("data/aq_closebtn.pnm");
object closebtn.hilight bitmap1 = LoadBitmap("data/aq_closebtn_over.pnm");
object rotatebtn bitmap1 = LoadBitmap("data/aq_rotatebtn.pnm");
object rotatebtn.hilight bitmap1 = LoadBitmap("data/aq_rotatebtn_over.pnm");
object zoombtn bitmap1 = LoadBitmap("data/aq_zoombtn.pnm");
object zoombtn.hilight bitmap1 = LoadBitmap("data/aq_zoombtn_over.pnm");

object box {
  height = 30;
  margin = 3;
  bgfill = Copy(base.display::bgfill);     // Use the same nifty box
  bitmap1 = Copy(base.display::bitmap1);
}

object toolbar {
  bgfill = fillstyle {
    Bitmap(x,y,w,h,bitmap1);
    SetColor(0x808080);
    Frame(x,y,w,h);
    SetLgop(PG_LGOP_SUBTRACT);
    Gradient(x,y,margin,h,0,0x404040,0x000000);
    Gradient(x,y,w,margin,90,0x404040,0x000000);
    SetLgop(PG_LGOP_NONE);   /* for text in dlgtitle */
  };
  margin = 5;
}

object popup {
  /* Normal background, but with shading on the edge, and 
     a thin black border */
  bgfill = fillstyle {
    Bitmap(x,y,w,h,bitmap1);
    SetColor(0x000000);
    Frame(x,y,w,h);
    SetLgop(PG_LGOP_SUBTRACT);
    Gradient(x+w-margin,y,margin,h,0,0x000000,0x808080);
    Gradient(x,y+h-margin,w,margin,90,0x000000,0x808080);
  };
  
  /* Extra padding */
  margin = 7;
  width = 70;
  height = 50;

  /*** Dim the stuff behind us */

/*
  backdrop = fillstyle { 
    SetLgop(PG_LGOP_MULTIPLY);
    Gradient(x,y,w,h,75,0x808040,0x404040);
  };
 */
}
object label.dlgtitle {
  bitmap1 = LoadBitmap("data/aq_title_blu_h.pnm");
  bgfill = Copy(toolbar::bgfill);  // nifty re-use of the shadowed fill
  margin = 6;
}

/* Menus */
object popup.menu {
  bgfill = fillstyle {
    Bitmap(x,y,w,h,bitmap1);
    SetColor(0x808080);
    Frame(x,y,w,h);
  };
  margin = 1;
  
}
object menuitem {
  align = PG_A_LEFT;
  spacing = 0;
  height = 20;
}
object menuitem.hilight bitmap1 = LoadBitmap("data/aq_menuselect.pnm");

/* Check boxes */
object checkbox {
   bgfill = fillstyle {
      Bitmap(x+1,y+((h-21)>>1)-1,19,21,bitmap1);
      x = x + 24;
   };
   bitmap1 = LoadBitmap("data/aq_check.pnm");
   align = PG_A_LEFT;
   margin = 12;
   spacing = 5;
}
object checkbox.on bitmap1 = LoadBitmap("data/aq_check_on.pnm");

/* The End */
